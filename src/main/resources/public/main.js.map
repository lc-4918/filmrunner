{"version":3,"sources":["./src/app/film-list/display-film-dialog/display-film-dialog.component.ts","./src/app/film-list/display-film-dialog/display-film-dialog.component.html","./src/app/auth/login-component/login-component.component.ts","./src/app/auth/login-component/login-component.component.html","./src/app/admin/reset/reset.component.ts","./src/app/admin/reset/reset.component.html","./src/app/directives/drag-drop.directive.ts","./src/environments/environment.ts","./src/app/film-list/edit-director-dialog/edit-director-dialog.component.ts","./src/app/film-list/edit-director-dialog/edit-director-dialog.component.html","./src/app/services/data.service.ts","./src/app/dvd-form/dvdform.component.ts","./src/app/dvd-form/dvdform.component.html","./src/app/theme-list/theme-list.component.ts","./src/app/theme-list/theme-list.component.html","./src/app/admin/import/import.component.ts","./src/app/admin/import/import.component.html","./src/app/dvd-form/chip-form/chipform.component.ts","./src/app/dvd-form/chip-form/chipform.component.html","./src/app/admin/export/export.component.ts","./src/app/admin/export/export.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/services/token-storage.service.ts","./src/app/helpers/auth.interceptor.ts","./src/app/theme-list/theme-dialog/theme-dialog.component.ts","./src/app/theme-list/theme-dialog/theme-dialog.component.html","./src/app/film-list/film-list.component.ts","./src/app/film-list/film-list.component.html","./src/app/admin/admin/admin.component.ts","./src/app/admin/admin/admin.component.html","./src/app/material/material.module.ts","./src/app/services/auth.service.ts","./src/app/numeric.directive.ts","./src/app/services/rest.service.ts","./src/app/app-routing.module.ts","./src/app/film-list/delete-film-dialog/delete-film-dialog.component.ts","./src/app/film-list/delete-film-dialog/delete-film-dialog.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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AAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACM;AACU;AACD;AACL;AACM;AACD;AACJ;AACF;AACqB;AACd;AACa;AACX;AACa;AACjB;AACQ;AACN;AACI;AACM;AACR;AACE;AACI;AACD;AACT;AACE;AACF;AACA;AACuB;AACb;AACK;AACQ;AACrB;AACE;AACE;AACF;AACW;AACN;AACT;AACE;AACF;AACM;AACA;AACN;AACF;;AAqD5C,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAlDjB;YACN,qEAAa;SACd,EAEC,4DAAU;QACV,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qEAAc;QACd,oFAAqB;QACrB,uEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,6EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB,uEAAc;QACd,uEAAe;QACf,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,oFAAoB;QACpB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,mEAAa;QACb,gEAAY;QACZ,sEAAe;mIAGN,cAAc,cAjDvB,qEAAa,aAGb,4DAAU;QACV,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qEAAc;QACd,oFAAqB;QACrB,uEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,6EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB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","file":"main.js","sourcesContent":["import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {DialogData} from \"../delete-film-dialog/delete-film-dialog.component\";\nimport {takeWhile} from \"rxjs/operators\";\nimport {RestService} from \"../../services/rest.service\";\nimport {DvdForm} from \"../../models/dvd-form\";\nimport {DataService} from \"../../services/data.service\";\nimport *  as  enums from '../../models/enums.json';\nimport {JsonItem} from \"../../models/json-item\";\nimport {FilmDisplay} from \"../../models/film-display\";\n\n@Component({\n  selector: 'app-display-film-dialog',\n  templateUrl: './display-film-dialog.component.html',\n  styleUrls: ['./display-film-dialog.component.css']\n})\nexport class DisplayFilmDialogComponent implements OnInit, OnDestroy {\n  dvdDetailArray: JsonItem[] = (enums as any).details as JsonItem[];\n  dvdGenreArray: JsonItem[] = (enums as any).genres as JsonItem[];\n  dvdSupportArray: JsonItem[] = (enums as any).supports as JsonItem[];\n  dvdTypeArray: JsonItem[] = (enums as any).types as JsonItem[];\n  dvdSourceArray: JsonItem[] = (enums as any).sources as JsonItem[];\n  dvdNormeArray: JsonItem[] = (enums as any).normes as JsonItem[];\n  hasSubscription = false;\n  filmReceived: DvdForm |undefined;\n  film: FilmDisplay | undefined;\n  constructor(\n    public dialogRef: MatDialogRef<DisplayFilmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private restService: RestService,\n    private dataService: DataService) {\n    this.hasSubscription = true;\n  }\n\n  ngOnInit(): void {\n    console.log(window.location.host);\n    this.getFilm();\n  }\n\n  getFilm():void{\n    this.restService.findDvdById(this.data.idFilm).pipe(\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      res=>{\n        this.filmReceived = res;\n        this.transformPays();\n        const film: FilmDisplay = {\n          titre: this.filmReceived.titre,\n          titreVf: this.filmReceived.titreVf,\n          annee: this.filmReceived.annee,\n          duree: this.filmReceived.duree,\n          description: this.filmReceived.description,\n          tip: this.filmReceived.format? this.findLabelById(this.dvdTypeArray, this.filmReceived.format):undefined,\n          support: this.filmReceived.support? this.findLabelById(this.dvdSupportArray, this.filmReceived.support):undefined,\n          genre: this.filmReceived.type? this.findLabelById(this.dvdGenreArray, this.filmReceived.type):undefined,\n          source: this.filmReceived.source? this.findLabelById(this.dvdSourceArray, this.filmReceived.source):undefined,\n          norme: this.filmReceived.norme? this.findLabelById(this.dvdNormeArray, this.filmReceived.norme):undefined,\n          details: this.filmReceived.details? this.parseDetails(this.filmReceived.details): undefined,\n          pays: this.filmReceived.pays,\n          subLangs: this.filmReceived.subLangs,\n          themes: this.filmReceived.themes,\n          realisateurs: this.filmReceived.realisateurs,\n          shortfilms: this.filmReceived.shortfilms,\n          imageUrl: this.filmReceived.imageUrl? this.filmReceived.imageUrl: this.dataService.imageDirectory+'default.jpg',\n        }\n        this.film = film;\n      },\n      error => {\n        console.log(\"impossible de lire le film : \"+error);\n      }\n    )\n  }\n\n  parseDetails(details: string):string[]{\n    const array: string[]=[];\n    const inputArray = details.split(';');\n    for (const input of inputArray){\n      const label = this.findLabelById(this.dvdDetailArray,input);\n      if (label){\n        array.push(label);\n      }\n    }\n    return array;\n  }\n\n\n  findLabelById(array: JsonItem[], id: string):string|undefined{\n    const idNumber = parseInt(id);\n    const item = array.find(x=>x.id==idNumber);\n    if (item){\n      return item.label;\n    }else{\n      return undefined;\n    }\n  }\n  transformPays():void{\n    if (this.filmReceived){\n      if (this.filmReceived.pays && this.filmReceived.pays.length>0){\n        let pays = [];\n        for (let i=0; i<this.filmReceived.pays.length; i++){\n          pays.push(this.dataService.findLabelByCodePays(this.filmReceived.pays[i]))\n        }\n      }\n    }\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnDestroy():void{\n    this.hasSubscription = false;\n  }\n}\n","<ng-container *ngIf=\"film\">\n  <h1 mat-dialog-title>{{film.titre}}</h1>\n  <div mat-dialog-content>\n    <div *ngIf=\"film.titreVf\">\n      <span>Titre VF</span>\n      <span>{{film.titreVf}}</span>\n    </div>\n    <div>\n      <span>{{film.annee}}</span>\n    </div>\n    <div>\n      <span>{{film.duree}}</span>\n    </div>\n    <div *ngIf=\"film.description\">\n      <span>{{film.description}}</span>\n    </div>\n    <div *ngIf=\"film.support\">\n      <span>{{film.support}}</span>\n    </div>\n    <div *ngIf=\"film.genre\">\n      <span>{{film.genre}}</span>\n    </div>\n    <div *ngIf=\"film.norme\">\n      <span>{{film.norme}}</span>\n    </div>\n    <div *ngIf=\"film.tip\">\n      <span>{{film.tip}}</span>\n    </div>\n    <div *ngIf=\"film.source\">\n      <span>{{film.source}}</span>\n    </div>\n    <div *ngIf=\"film.details\">\n      <span *ngFor=\"let detail of film.details; let index; let isLast=last;\">{{detail}}{{isLast ? '' : ', '}}</span>\n    </div>\n    <div *ngIf=\"film.pays\">\n      <span *ngFor=\"let pay of film.pays; let index; let isLast=last;\">{{pay}}{{isLast ? '' : ', '}}</span>\n    </div>\n    <div *ngIf=\"film.subLangs\">\n      <span *ngFor=\"let lang of film.subLangs; let index; let isLast=last;\">{{lang}}{{isLast ? '' : ', '}}</span>\n    </div>\n    <div *ngIf=\"film.realisateurs\">\n      <span *ngFor=\"let rea of film.realisateurs; let index; let isLast=last;\">{{rea}}{{isLast ? '' : ', '}}</span>\n    </div>\n    <div *ngIf=\"film.shortfilms\">\n      <span *ngFor=\"let sf of film.shortfilms; let index; let isLast=last;\">{{sf}}{{isLast ? '' : ', '}}</span>\n    </div>\n    <div *ngIf=\"film.themes\">\n      <span *ngFor=\"let th of film.themes; let index; let isLast=last;\">{{th}}{{isLast ? '' : ', '}}</span>\n    </div>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"close()\" cdkFocusInitial>Fermer</button>\n  </div>\n</ng-container>\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {TokenStorageService} from \"../../services/token-storage.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {takeWhile} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-login-component',\n  templateUrl: './login-component.component.html',\n  styleUrls: ['./login-component.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  form: any = {};\n  isLoggedIn = false;\n  hasSubscription = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService, private router: Router, private route: ActivatedRoute) {\n    this.hasSubscription = true;\n  }\n\n  ngOnInit():void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmit():void {\n    this.authService.login(this.form).pipe(\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.token);\n        this.tokenStorage.saveUser(data);\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.authService.loggedIn.next(true);\n        this.router.navigate([''], { relativeTo: this.route }).then();\n      },\n      err => {\n        this.errorMessage = err.error;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  register():void{\n    this.router.navigate(['/register'], { relativeTo: this.route }).then();\n  }\n  reloadPage():void {\n    window.location.reload();\n  }\n  ngOnDestroy():void{\n    this.hasSubscription = false;\n  }\n}\n","<mat-card class=\"login-card\">\n  <div class=\"card-header\">\n    <div class=\"center\">\n      <div class=\"card-title\"><h1>Utilisateur existant</h1></div>\n    </div>\n  </div>\n  <form\n    *ngIf=\"!isLoggedIn\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && onSubmit()\"\n    #f=\"ngForm\"\n    novalidate\n  >\n    <mat-card-content>\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Utilisateur</mat-label>\n          <input matInput\n             placeholder=\"Ex. user\"\n             type=\"text\"\n             class=\"form-control\"\n             name=\"username\"\n             [(ngModel)]=\"form.username\"\n             required\n             #username=\"ngModel\"\n          >\n          <div\n            class=\"alert alert-danger\"\n            role=\"alert\"\n            *ngIf=\"f.submitted && username.invalid\"\n          >\n            Un nom d'utilisateur est requis!\n          </div>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Mot de passe</mat-label>\n          <input matInput\n                 placeholder=\"Ex. Pizza\"\n                 type=\"password\"\n                 class=\"form-control\"\n                 name=\"password\"\n                 [(ngModel)]=\"form.password\"\n                 required\n                 minlength=\"6\"\n                 #password=\"ngModel\">\n          <div\n            class=\"alert alert-danger\"\n            role=\"alert\"\n            *ngIf=\"f.submitted && password.invalid\">\n            <div *ngIf=\"password.errors?.required\">Un mot de passe est requis!</div>\n            <div *ngIf=\"password.errors?.minlength\">\n              Le mot de passe doit avoir 6 caractères minimum\n            </div>\n          </div>\n        </mat-form-field>\n      <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n        Authentifié comme {{ roles }}.\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <div class=\"form-group center\">\n        <button mat-raised-button color=\"primary\">Connexion</button>\n      </div>\n      <div class=\"form-group center\">\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted && isLoginFailed\"\n        >\n          Echec d'authentification: {{ errorMessage }}\n        </div>\n        <div\n          class=\"register-link\" *ngIf=\"f.submitted && isLoginFailed\">\n          <span>Enregistrer un nouvel utilisateur</span>\n          <span class=\"register-icon\" (click)=\"register()\">\n            <mat-icon color=\"primary\">contact_mail</mat-icon>\n          </span>\n        </div>\n      </div>\n    </mat-card-actions>\n  </form>\n</mat-card>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {RestService} from \"../../services/rest.service\";\nimport {takeWhile} from \"rxjs/operators\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.css']\n})\nexport class ResetComponent implements OnInit, OnDestroy {\n  toClean: boolean | undefined;\n  hasSubscription: boolean | undefined;\n  hasSucceed: boolean | undefined;\n  messageResponse: string | undefined;\n  constructor(private restService : RestService, private router : Router, private route : ActivatedRoute) {\n    this.hasSubscription = true;\n    this.toClean = false;\n  }\n\n  ngOnInit(): void {\n  }\n\n  resetAll():void{\n    this.restService.cleanDb().pipe(\n      // @ts-ignore\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      res=>{\n        if (res!=null){\n          this.hasSucceed = res.status;\n          this.messageResponse = res.message;\n        }\n      }\n    )\n  }\n\n  return():void{\n    this.router.navigate([''], { relativeTo: this.route }).then();\n  }\n\n  ngOnDestroy():void{\n    this.hasSubscription = false;\n  }\n}\n","<mat-card class=\"reset-card\">\n  <div class=\"card-header\">\n    <div class=\"center\">\n      <div class=\"card-title\"><h1>Réinitialiser la base de données</h1></div>\n    </div>\n  </div>\n  <form\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid\"\n    #f=\"ngForm\"\n    novalidate\n  >\n    <mat-card-content>\n      <div class=\"content\">\n        <div *ngIf=\"!hasSucceed\">\n          <div class=\"reset-text\">\n            <mat-checkbox class=\"reset-checkbox\" [(ngModel)]=\"toClean\" [ngModelOptions]=\"{standalone: true}\"></mat-checkbox>\n            <span>En cochant ici vous acceptez de supprimer:</span>\n            <div class=\"suppr-list\">\n              <ul>\n                <li>films</li>\n                <li>court-métrages</li>\n                <li>réalisateurs</li>\n                <li>thèmes</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div class=\"rappel mt20\" [class.after-reset]=\"hasSucceed\">\n          <span>Les listes de détails, supports, normes, etc, ne {{hasSucceed? ' sont ': ' seront '}} pas supprimées</span>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <div class=\"form-group center action-container\">\n        <div\n          role=\"alert\"\n          *ngIf=\"f.submitted\"\n          [className]=\"hasSucceed ? 'success' : 'fail'\"\n        >\n          {{ messageResponse }}\n        </div>\n      </div>\n      <div class=\"buttons center\">\n        <button mat-raised-button (click)=\"return()\" color=\"link\">Retour</button>\n        <button mat-raised-button *ngIf=\"toClean && !hasSucceed\" class=\"ml20\" (click)=\"resetAll()\" color=\"accent\">Confirmer</button>\n      </div>\n\n    </mat-card-actions>\n  </form>\n</mat-card>\n","import { Directive, Output, EventEmitter, HostBinding, HostListener } from '@angular/core';\nimport { DomSanitizer} from '@angular/platform-browser';\n\n@Directive({\n  selector: '[appDragDrop]'\n})\nexport class DragDropDirective {\n\n  @Output() files: EventEmitter<File | Event> = new EventEmitter();\n\n  @HostBinding('style.background-color') private background = '#f5fcff'\n  @HostBinding('style.opacity') private opacity = '0.8'\n\n  constructor(private sanitizer: DomSanitizer) { }\n  //Dragover listener\n  @HostListener('dragover', ['$event']) onDragOver(evt: DragEvent) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background = '#3f51b5';\n    this.opacity = '0.4'\n  }\n\n  //Dragleave listener\n  @HostListener('dragleave', ['$event']) public onDragLeave(evt: DragEvent) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background = '#f5fcff'\n    this.opacity = '1'\n  }\n\n  //Drop listener\n  @HostListener('drop', ['$event']) public ondrop(evt: DragEvent) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background = '#f5fcff'\n    this.opacity = '1'\n    if (evt.dataTransfer && evt.dataTransfer.files[0]) {\n      this.files.emit(evt.dataTransfer.files[0]);\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  baseUrl: 'https://filmrunner.herokuapp.com/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {DialogData} from \"../delete-film-dialog/delete-film-dialog.component\";\n\n@Component({\n  selector: 'app-edit-director-dialog',\n  templateUrl: './edit-director-dialog.component.html',\n  styleUrls: ['./edit-director-dialog.component.css']\n})\nexport class EditDirectorDialogComponent implements OnInit, OnDestroy {\nhasSubscription = false;\ndirectorName: string | undefined;\n  constructor(public dialogRef: MatDialogRef<EditDirectorDialogComponent>,\n  @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  ngOnDestroy():void {\n    this.hasSubscription = false;\n  }\n}\n","<h1 mat-dialog-title>Modification du réalisateur: <span class=\"director-name\">{{data.name}}</span> </h1>\n<div mat-dialog-content class=\"center\">\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Nom du réalisateur</mat-label>\n    <input matInput [(ngModel)]=\"data.name\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions class=\"buttons center\">\n  <button mat-button (click)=\"onNoClick()\">Annuler</button>\n  <button mat-raised-button [mat-dialog-close]=\"data.name\" cdkFocusInitial color=\"primary\">Mettre à jour</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport  *  as  codePays  from  '../models/codealpha2_fr.json';\nimport  *  as  enums  from  '../models/enums.json';\nimport { DvdForm } from '../models/dvd-form';\nimport {FilmListItem} from '../models/film-list-item';\nimport {JsonItem} from '../models/json-item';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {PaysItem} from '../models/pays-item';\nimport {BehaviorSubject} from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  isFormPage: boolean | undefined;\n  detailsObject: JsonItem[] = (enums as any).details as JsonItem[];\n  json = (codePays as any).default;\n  filmList: FilmListItem[] = [];\n  directorList: string[] = [];\n  themeList: string[] = [];\n  paysList: PaysItem[] = [];\n  imageDirectory: string |undefined;\n  directorSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor(private _snackBar: MatSnackBar) {\n    for (const property in this.json) {\n      const code = property;\n      const label = (this.json)[property];\n      const pays: PaysItem = {code,label}\n      this.paysList.push(pays);\n    }\n  }\n\n  isPaysExists(code: string):boolean{\n    let result = false;\n    const pays = this.paysList.find(p=>p.code==code);\n    if (pays){\n      result = true;\n    }\n    return result;\n  }\n\n  findLabelByCodePays(code: string):string | null{\n    const pays = this.paysList.find(p=>p.code==code);\n    if (pays){\n      return pays.label;\n    }else{\n      return null;\n    }\n  }\n  findLabelsContaining(code: string):string[]{\n    const paysFound: PaysItem[] = this.paysList.filter(p=>p.label.toLowerCase().includes(code));\n    const paysLabels: string[] = [];\n    if (paysFound){\n      for (const pays of paysFound){\n        paysLabels.push(pays.code)\n      }\n    }\n    return paysLabels;\n  }\n\n  // DVD-LIST MANAGEMENT\n  getFilmList():FilmListItem[]{\n    return this.filmList;\n  }\n  setFilmList(filmList: FilmListItem[]){\n    this.filmList = filmList;\n  }\n  hasFilm(): boolean{\n    return this.filmList && this.filmList.length>0;\n  }\n  deleteFilmFromList(id: number):void{\n    const filmItemToDelete: FilmListItem | undefined = this.filmList.find(item=> item.id == id);\n    if (filmItemToDelete){\n      const index = this.filmList.indexOf(filmItemToDelete,0);\n      this.filmList.splice(index);\n    }\n  }\n  addOrUpdateFilmFromList(dvd: FilmListItem, id?: number,):void{\n    if (id){\n      const dvdItemToUpdate: FilmListItem | undefined = this.filmList.find(item=> item.id == id);\n      if (dvdItemToUpdate){\n        const index = this.filmList.indexOf(dvdItemToUpdate,0);\n        this.filmList[index]=dvd;\n      }\n    }else{\n      this.filmList.push(dvd);\n    }\n  }\n  // DIRECTORS MANAGEMENT\n  hasDirectorList(): boolean{\n    return this.directorList && this.directorList.length>0;\n  }\n  getDirectorList(): string[]{\n    return this.directorList;\n  }\n  setDirectorList(directorList: string[]):void{\n    this.directorList = directorList;\n  }\n\n  // CODE-PAYS MANAGEMENT\n  transformCodesToPaysLabels(listeString: string):string{\n    const codeArray: string[] = listeString.split(';');\n    const array: string[] = [];\n    for (const code of codeArray){\n      const label = this.findLabelByCodePays(code);\n      if (label){\n        array.push(label);\n      }\n    }\n    let result = array[0];\n    if (array.length>=1 && array[0]==''){\n      array.splice(0,1);\n    }\n    if (array.length>1){\n      for (let i=1; i<array.length; i++){\n        result = result + ', ' + array[i];\n      }\n    }else{\n      result = array[0];\n    }\n    return result;\n  }\n\n  // DETAILS MANAGEMENT\n  createDetailsMap(dvd: DvdForm):Map<number,boolean>{\n    let result : Map<number,boolean> = new Map<number,boolean>();\n    const detailsArray = dvd.details && dvd.details.length>0? dvd.details?.split(';'): [];\n    for (const detail of this.detailsObject){\n      result.set(detail.id,detailsArray.indexOf(detail.id.toString())>-1);\n    }\n    return result;\n  }\n\n  // THEMES MANAGEMENT\n  hasThemeList(): boolean{\n    return this.themeList && this.themeList.length>0;\n  }\n  getThemeList(): string[]{\n    return this.themeList;\n  }\n  setThemeList(themeList: string[]):void{\n    this.themeList = themeList;\n  }\n\n  // LOG MANAGEMENT\n  openSnackBar(message: string, level: string):void {\n    const levelClass = level.concat('-snackbar');\n    this._snackBar.open(message, undefined,{\n      duration: 2000,\n      panelClass: [levelClass]\n    });\n  }\n\n  // MISCELLANEOUS\n  convertDetailsMapToString(details: Map<number,boolean>):string{\n    const result: number[] = [];\n    details.forEach((v,k)=>{\n      if (v){\n        result.push(k);\n      }\n    });\n    return result.join(';');\n  }\n}\n","import {Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges} from '@angular/core';\nimport *  as  enums from '../models/enums.json';\nimport *  as  codePays from '../models/codealpha2_fr.json';\nimport {RestService} from \"../services/rest.service\";\nimport {filter, takeWhile} from \"rxjs/operators\";\nimport {DvdForm} from \"../models/dvd-form\";\nimport {JsonItem} from \"../models/json-item\";\nimport {DataService} from \"../services/data.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MatSlideToggleChange} from \"@angular/material/slide-toggle\";\nimport {FormArray, FormBuilder, FormControl} from \"@angular/forms\";\nimport {FilmListItem} from \"../models/film-list-item\";\n\n@Component({\n  selector: 'app-dvdform',\n  templateUrl: './dvdform.component.html',\n  styleUrls: ['./dvdform.component.css']\n})\n\nexport class DvdformComponent implements OnInit, OnDestroy {\n  isEdit = false;\n  dvdId: number |undefined;\n  hasSubscription: boolean = false;\n  dvdDetailArray: JsonItem[] = (enums as any).details as JsonItem[];\n  dvdGenreArray: JsonItem[] = (enums as any).genres as JsonItem[];\n  dvdSupportArray: JsonItem[] = (enums as any).supports as JsonItem[];\n  dvdTypeArray: JsonItem[] = (enums as any).types as JsonItem[];\n  dvdSourceArray: JsonItem[] = (enums as any).sources as JsonItem[];\n  dvdNormeArray: JsonItem[] = (enums as any).normes as JsonItem[];\n  paysArray: any = (codePays as any).default;\n  pays: string[] = [];\n  directors: string[] = [];\n  themes: string[] | undefined;\n  dvdDetailMap: Map<number,boolean> = new Map<number,boolean>();\n  hasDescription: boolean = false;\n  descriptionToggleLabel = \"Ajouter une description\";\n  hasShortfilm: boolean = false;\n  hasCustomImage: boolean = false;\n  selectedFiles: FileList | any;\n  currentFile: File | any;\n  uploadSuccess: boolean = false;\n  chipTitles: string[] = [\"Réalisateurs\",\"Pays\",\"Sous-titres\"];\n  chipPlaceholders: string[] = [\"Nouveau réalisateur\",\"Nouveau pays\",\"Nouvelle langue\"];\n  badgeElement: any;\n  componentDvd: DvdForm = {\n    titre: '',\n    pays: [],\n    realisateurs: [],\n    subLangs: [],\n    shortfilms: [],\n  };\n  shortfilmForm = this.fb.group({\n    shortfilmTab: this.fb.array([],{updateOn: 'blur'})\n  });\n  themesControl = new FormControl();\n\n  constructor(private restService: RestService, private dataService: DataService,private router: Router, private route: ActivatedRoute, private fb: FormBuilder) {\n    this.hasSubscription = true;\n    for(let key in this.paysArray) {\n      this.pays.push(key);\n    }\n    for (const detail of this.dvdDetailArray){\n      this.dvdDetailMap.set(detail.id,false);\n    }\n    route.params.pipe(\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(val => {\n      if (val.id){\n        this.isEdit = true;\n        this.dvdId = parseInt(val.id);\n      }else{\n        this.isEdit = false;\n        this.dvdId = undefined;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.dvdId){\n      this.restService.findDvdById(this.dvdId).pipe(\n        takeWhile(()=>this.hasSubscription)\n      ).subscribe(\n        res=>{\n          this.cleanEmptyList(res);\n          this.componentDvd = res;;\n          this.dvdDetailMap = this.dataService.createDetailsMap(this.componentDvd);\n          const desc = this.componentDvd.description;\n          this.hasDescription = desc!==undefined && desc!==null && desc.length>0;\n          const cm = this.componentDvd.shortfilms;\n          this.hasShortfilm = cm!==undefined && cm!==null && cm.length>0;\n          if (this.hasShortfilm){\n            this.setFormShortfilms();\n          }\n          this.themesControl.setValue(this.componentDvd.themes);\n          if (this.componentDvd.imageUrl){\n            const length =this.componentDvd.imageUrl.split('\\\\').length;\n            this.currentFile = this.componentDvd.imageUrl?.split('\\\\')[length-1];\n          }\n        },\n        error=>{\n          this.dataService.openSnackBar(\"erreur dans la récupération du film\",\"error\");\n          console.log(error);\n        }\n      )\n    }\n\n    // Get all existing directors for autocomplete\n    this.restService.getAllDirectorsName().pipe(\n      filter(()=>!this.dataService.hasDirectorList()),\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      res=>{\n        this.directors = res;\n        this.dataService.setDirectorList(res);\n      },\n      error=>{\n        console.log(error);\n      }\n    )\n\n    // Get all existing themes for select\n    this.restService.getAllThemesName().pipe(\n      filter(()=>!this.themes),\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      res=>{\n        const index = res.indexOf(\"\",0);\n        if (index>=0){\n          res.splice(index,1);\n        }\n        this.themes = res;\n        this.dataService.setThemeList(res);\n      },\n      error=>{\n        console.log(error);\n      }\n    )\n    if(this.dataService.hasThemeList()){\n      this.themes = this.dataService.getThemeList();\n    }\n\n  }\n\n  //DVD\n  validForm():void{\n    if (this.selectedFiles){\n      this.currentFile = this.selectedFiles.item(0);\n    }\n    if (!this.currentFile){\n      this.createOrUpdateDvd();\n      return;\n    }\n    this.restService.upload(this.currentFile).then(\n      res=> {\n        this.componentDvd.imageUrl = res.message;\n        if (this.selectedFiles){\n          this.dataService.openSnackBar(\"image chargée\",\"success\");\n        }\n        this.createOrUpdateDvd();\n        this.selectedFiles = undefined;\n      }\n    ).catch(error=>{\n      this.uploadSuccess = false;\n      this.currentFile = undefined;\n      this.dataService.openSnackBar(\"échec de l'import de l'image\",\"error\");\n    })\n  }\n  createOrUpdateDvd():void{\n    const isUpdate: boolean = !!this.dvdId;\n    this.componentDvd.details = this.dataService.convertDetailsMapToString(this.dvdDetailMap);\n    this.componentDvd.description = this.hasDescription ? this.componentDvd.description : undefined;\n    this.componentDvd.shortfilms = this.getFormShortfilms();\n    this.componentDvd.themes = this.themesControl.value;\n    if (isUpdate){\n      this.restService.updateDvd(this.componentDvd).pipe(\n        takeWhile(()=>this.hasSubscription),\n      ).subscribe(\n        res=>{\n          this.dataService.addOrUpdateFilmFromList(res, this.dvdId);\n          this.dataService.openSnackBar(\"dvd mis à jour\", \"success\");\n          this.goToDvdPage();\n        },\n        error => {\n          this.dataService.openSnackBar(\"échec de la mise à jour\", \"error\");\n          console.log(error);\n        }\n      );\n    }else{\n      this.restService.createDvd(this.componentDvd).pipe(\n        takeWhile(()=>this.hasSubscription)\n      ).subscribe(\n        res=>{\n          this.dataService.addOrUpdateFilmFromList(res);\n          this.dataService.openSnackBar(\"film ajouté\", \"success\");\n          this.goToDvdPage();\n        },\n        error => {\n          this.dataService.openSnackBar(\"échec de la création du film\", \"error\");\n          console.log(error);\n        }\n      );\n    }\n  }\n  deleteDvd(id: number):void{\n    this.restService.deleteDvd(id).pipe(\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      res=>{\n        if (res){\n          this.dataService.deleteFilmFromList(id);\n          this.dataService.openSnackBar(\"dvd supprimé\", \"success\");\n          this.goToDvdPage();\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    )\n  }\n  cleanEmptyList(film: DvdForm): void{\n    if (film.pays?.length==1 && film.pays[0]==''){\n      film.pays = [];\n    }\n    if (film.subLangs?.length==1 && film.subLangs[0]==''){\n      film.subLangs = [];\n    }\n  }\n\n  // DETAILS\n  detailToggleChanged(event: any, id: number):void{\n    const previousState = this.dvdDetailMap.get(id);\n    const currentState = previousState==undefined ? true : !previousState;\n    this.dvdDetailMap.set(id,currentState)\n    const label = this.dvdDetailArray.filter(x=>x.id==id).map(x=>x.label)[0];\n    if (label=='CM'){\n      this.toggleShortfilms(currentState);\n    }\n  }\n\n  // CHIPS\n  setChipData(event: string[],category: string):void{\n    switch (category){\n      case 'realisateurs':\n        this.componentDvd.realisateurs = event;\n        break;\n        case 'pays':\n          this.componentDvd.pays = event;\n        break;\n        case 'langues':\n          this.componentDvd.subLangs = event;\n        break;\n    }\n  }\n\n  // DESCRIPTION\n  toggleDescTitle(event: MatSlideToggleChange):void{\n    this.descriptionToggleLabel = this.hasDescription ? \"\":\"Ajouter une description\";\n  }\n\n  // COURT-METRAGE\n  formValues = this.shortfilmForm.getRawValue();\n  arrayValues = (this.shortfilmForm.get('shortfilmTab') as FormArray).getRawValue();\n  addShortfilm():void{\n    const group = this.fb.group({\n      cmName: '',\n    },{updateOn: 'blur'});\n    (this.shortfilmForm.get('shortfilmTab') as FormArray).push(group);\n  }\n  deleteShortfilm(index: number):void{\n    (this.shortfilmForm.get('shortfilmTab') as FormArray).removeAt(index);\n  }\n  toggleShortfilms(isCmChecked: boolean):void{\n    const formArray = (this.shortfilmForm.get('shortfilmTab') as FormArray);\n      this.hasShortfilm = isCmChecked;\n      if (isCmChecked){\n        if ((this.shortfilmForm.get('shortfilmTab') as FormArray).length==0){\n          this.addShortfilm();\n        }\n      }else if (formArray && formArray.length==1 && formArray.at(0).value.length==0){\n        (this.shortfilmForm.get('shortfilmTab') as FormArray).clear();\n      }\n    }\n  get shortfilmTab() : FormArray {\n    return this.shortfilmForm.get('shortfilmTab') as FormArray\n  }\n  getFormShortfilms():string[]{\n    return ((this.shortfilmForm.get('shortfilmTab') as FormArray).getRawValue()).filter(x => x.cmName.length > 0).map(x => x.cmName);\n  }\n  setFormShortfilms():void{\n    const groups = this.componentDvd.shortfilms.map(shortfilm => {\n      return this.fb.group({cmName: this.fb.control(shortfilm)},{ updateOn: 'blur' });\n    });\n    const array = this.shortfilmForm.get('shortfilmTab') as FormArray;\n    for(const group of groups){\n      array.push(group);\n    }\n  }\n  hasMoreShortfilms():string{\n    const array = (this.shortfilmForm.get('shortfilmTab') as FormArray);\n    const result = '';\n    if (array && array.length>4){\n      if (array.length>8){\n        return 'row-detail-xlarge';\n      }else{\n        return 'row-detail-large';\n      }\n    }\n    return result;\n  }\n  hasMoreThanOneShortfilm():boolean{\n    const array = (this.shortfilmForm.get('shortfilmTab') as FormArray);\n    return array && array.length>1;\n  }\n\n  // IMAGE\n  selectFile(event: any):void {\n    this.selectedFiles = event.target.files;\n  }\n  hasImage():string{\n    const hasSelectedImage = this.selectedFiles && this.selectedFiles.length>0;\n    const hasImageInDvd = this.componentDvd && this.componentDvd.imageUrl &&  this.componentDvd.imageUrl.length>0 && !this.componentDvd.imageUrl.includes('default-film.jpg');\n    if (hasSelectedImage || hasImageInDvd){\n      return 'image-wrapper-selected'\n    }else{\n      return '';\n    }\n  }\n  deleteFile():void{\n    if (this.componentDvd.imageUrl){\n      this.componentDvd.imageUrl = undefined;\n      if (this.dvdId){\n        this.restService.deleteImage(this.dvdId).pipe(\n          takeWhile(()=>this.hasSubscription)\n        ).subscribe(\n          res=>{\n            if (res){\n              this.selectedFiles = undefined;\n              this.currentFile = undefined;\n              this.dataService.openSnackBar(\"image supprimée\",\"success\");\n            }else{\n              this.dataService.openSnackBar(\"impossible de supprimer l'image\",\"error\");\n            }\n          },\n          err=>{\n            this.dataService.openSnackBar(\"impossible de supprimer l'image\",\"error\");\n          }\n        )\n      }\n    }else{\n      this.currentFile = undefined;\n      this.selectedFiles = undefined;\n    }\n  }\n\n\n  // NAVIGATION\n  goToDvdPage(): void{\n    this.router.navigate(['']).then(r =>{\n      if (r){\n        console.log(\"navigation successful\");\n      }else{\n        console.log(\"navigation has failed\");\n      }\n    });\n  }\n\n  ngOnDestroy():void{\n    this.hasSubscription = false;\n  }\n}\n","<div class=\"dvd-form-container\">\n  <div class=\"dvd-form\">\n    <div class=\"inner-form\">\n      <div class=\"first-col\">\n        <div class=\"first-sub-col\">\n          <div class=\"title-container\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Titre</mat-label>\n              <input matInput [(ngModel)]=\"componentDvd.titre\">\n            </mat-form-field>\n          </div>\n          <div class=\"titlevf-container\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Titre VF</mat-label>\n              <input matInput [(ngModel)]=\"componentDvd.titreVf\">\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"second-sub-col right\">\n          <div class=\"year-container\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Année</mat-label>\n              <input numeric matInput [(ngModel)]=\"componentDvd.annee\">\n            </mat-form-field>\n          </div>\n          <div class=\"duration-container\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Durée</mat-label>\n              <input numeric matInput [(ngModel)]=\"componentDvd.duree\">\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div class=\"second-col\">\n        <div>\n          <div class=\"theme-container\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Thèmes</mat-label>\n              <mat-select [formControl]=\"themesControl\" multiple>\n                <mat-select-trigger>\n                  {{themesControl.value ? themesControl.value[0] : ''}}\n                  <span *ngIf=\"themesControl.value?.length == 2\" class=\"example-additional-selection\">\n                    {{themesControl.value ? ', '+themesControl.value[1] : ''}}\n                  </span>\n                  <span *ngIf=\"themesControl.value?.length > 2\" class=\"example-additional-selection\">\n                    (+{{themesControl.value.length - 1}} {{themesControl.value?.length === 2 ? 'other' : 'others'}})\n                  </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let theme of themes\" [value]=\"theme\">{{theme}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div class=\"image-container\">\n            <span *ngIf=\"!hasImage(); else badge\">\n              <span class=\"image-wrapper\"\n                    [ngClass]=\"hasImage()\">\n                <input type=\"file\" (change)=\"selectFile($event)\" class=\"image-input\"/>\n              </span>\n            </span>\n            <ng-template #badge>\n              <button type=\"button\" mat-icon-button color=\"primary\" aria-label=\"Supprimer\" class=\"image-delete-button\" (click)=\"deleteFile()\">\n                <mat-icon class=\"image-delete-icon\">delete</mat-icon>\n              </button>\n              <span matBadge=\"1\" matBadgePosition=\"above after\" matBadgeOverlap=\"true\" matBadgeColor=\"accent\">\n                <span class=\"image-wrapper\"\n                     [ngClass]=\"hasImage()\" title=\"{{currentFile}}\">\n                  <input type=\"file\" (change)=\"selectFile($event)\" class=\"image-input\"/>\n                </span>\n              </span>\n            </ng-template>\n            <!--<button mat-stroked-button type=\"button\" class=\"btn btn-success image-button\" *ngIf=\"selectedFiles\" (click)=\"upload()\">\n              Upload\n            </button>-->\n          </div>\n        </div>\n        <div class=\"pays-container\">\n          <chip-form-component\n            [title]=\"chipTitles[1]\"\n            [placeholder]=\"chipPlaceholders[1]\"\n            [elements]=\"componentDvd.pays\"\n            [listOfElements]=\"pays\"\n            [limitedChoice]=\"true\"\n            (elementsEmitter)=\"setChipData($event,'pays')\"\n            class=\"country-chip\">\n          </chip-form-component>\n        </div>\n        <div class=\"relative\">\n          <div class=\"description-container\">\n            <div class=\"description-toggle-container\">\n              <mat-slide-toggle (change)=\"toggleDescTitle($event)\" [(ngModel)]=\"hasDescription\">{{descriptionToggleLabel}}</mat-slide-toggle>\n            </div>\n            <div *ngIf=\"hasDescription\" class=\"description-area-container\">\n              <mat-form-field class=\"description-form\">\n                <mat-label>Description</mat-label>\n                <textarea matInput [(ngModel)]=\"this.componentDvd.description\" placeholder=\"Description du film\" class=\"description-area\"></textarea>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row-list\">\n        <div class=\"first-col center\">\n          <span class=\"list-select-container\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Type</mat-label>\n              <mat-select [(value)]=\"componentDvd.format\">\n                <mat-option [value]=\"null\">None</mat-option>\n                <mat-option *ngFor=\"let type of dvdTypeArray\" [value]=\"type.id\">{{type.label}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Support</mat-label>\n              <mat-select [(value)]=\"componentDvd.support\">\n                <mat-option [value]=\"null\">None</mat-option>\n                <mat-option *ngFor=\"let support of dvdSupportArray\" [value]=\"support.id\">{{support.label}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Genre</mat-label>\n              <mat-select [(value)]=\"componentDvd.type\">\n                <mat-option [value]=\"null\">None</mat-option>\n                <mat-option *ngFor=\"let genre of dvdGenreArray\" [value]=\"genre.id\">{{genre.label}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Norme</mat-label>\n              <mat-select [(value)]=\"componentDvd.norme\">\n                <mat-option [value]=\"null\">None</mat-option>\n                <mat-option *ngFor=\"let norme of dvdNormeArray\" [value]=\"norme.id\">{{norme.label}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Source</mat-label>\n              <mat-select [(value)]=\"componentDvd.source\">\n                <mat-option [value]=\"null\">None</mat-option>\n                <mat-option *ngFor=\"let source of dvdSourceArray\" [value]=\"source.id\">{{source.label}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </span>\n        </div>\n        <div class=\"second-col\">\n          <div class=\"langues-container\">\n            <chip-form-component\n              [title]=\"chipTitles[2]\"\n              [placeholder]=\"chipPlaceholders[2]\"\n              [elements]=\"componentDvd.subLangs\"\n              [listOfElements]=\"pays\"\n              [limitedChoice]=\"true\"\n              (elementsEmitter)=\"setChipData($event,'langues')\"\n              class=\"language-chip\">\n            </chip-form-component>\n          </div>\n        </div>\n      </div>\n      <div class=\"row-director\">\n        <chip-form-component\n          [title]=\"chipTitles[0]\"\n          [placeholder]=\"chipPlaceholders[0]\"\n          [elements]=\"componentDvd.realisateurs\"\n          [listOfElements]=\"directors\"\n          (elementsEmitter)=\"setChipData($event,'realisateurs')\"\n          class=\"director-chip\">\n        </chip-form-component>\n      </div>\n      <div class=\"row-detail\" [ngClass]=\"hasMoreShortfilms()\">\n        <div class=\"center\">\n          <mat-button-toggle-group #group=\"matButtonToggleGroup\" appearance=\"legacy\" multiple=true class=\"detail-group\"><!--dvdDetailMap.get(item.id)-->\n            <mat-button-toggle *ngFor=\"let item of dvdDetailArray; let index = index;\" (change)=\"detailToggleChanged($event,item.id)\" [checked]=\"dvdDetailMap.get(item.id)\">{{item.label}}</mat-button-toggle>\n          </mat-button-toggle-group>\n        </div>\n        <div class=\"shortfilm-container\" *ngIf=\"hasShortfilm\">\n          <div class=\"shortfilm-button-container\">\n            <label>\n              <span>Ajouter un court-métrage</span>\n              <button type=\"button\" mat-icon-button color=\"primary\" aria-label=\"Ajouter court-métrage\" (click)=\"addShortfilm()\">\n                <mat-icon>add</mat-icon>\n              </button>\n            </label>\n          </div>\n          <ng-container [formGroup]=\"shortfilmForm\">\n            <div class=\"shortfilm-array-container\" formArrayName=\"shortfilmTab\">\n              <div class=\"shortfilm-area-container\" *ngFor=\"let _ of shortfilmTab.controls; index as i;\">\n                <ng-container [formGroupName]=\"i\">\n                  <mat-form-field class=\"shortfilm-area-form\">\n                    <mat-label>Court métrage #{{i+1}}</mat-label>\n                    <textarea matInput formControlName=\"cmName\" placeholder=\"Description du film\" class=\"description-area\"></textarea>\n                  </mat-form-field>\n                  <span class=\"shortfilm-area-button-container\">\n                  <button type=\"button\" mat-icon-button *ngIf=\"hasMoreThanOneShortfilm()\" color=\"primary\" aria-label=\"Supprimer\" (click)=\"deleteShortfilm(i)\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n                </span>\n                </ng-container>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"footer-form center\">\n        <div class=\"theme-param\">\n          <app-theme-list></app-theme-list>\n        </div>\n        <div class=\"form-button\">\n          <button type=\"button\" mat-raised-button\n                  routerLink=\"/\">\n            Annuler\n          </button>\n          <button type=\"button\" mat-raised-button\n                  (click)=\"validForm()\"\n                  color=\"primary\">{{!!this.dvdId ? 'Mettre à jour':'Créer'}}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ThemeDialog} from \"./theme-dialog/theme-dialog.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-theme-list',\n  templateUrl: './theme-list.component.html',\n  styleUrls: ['./theme-list.component.css']\n})\nexport class ThemeListComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n  open():void{\n    this.dialog.open(ThemeDialog, {\n    });\n  }\n}\n","<div class=\"theme-button-container\">\n  <label (click)=\"open()\">\n    <button mat-icon-button color=\"accent\" aria-label=\"Theme icon button\">\n      <mat-icon>label</mat-icon>\n    </button>\n    <span>Gérer les thèmes</span>\n  </label>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {RestService} from \"../../services/rest.service\";\nimport {filter, takeWhile} from \"rxjs/operators\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {DataService} from \"../../services/data.service\";\n\n@Component({\n  selector: 'app-import',\n  templateUrl: './import.component.html',\n  styleUrls: ['./import.component.css']\n})\nexport class ImportComponent implements OnInit, OnDestroy {\n  importedTitle: string|undefined;\n  linesImported: number = 0;\n  messageResult: String | undefined;\n  isSucceed: boolean | undefined;\n  isProcessing = false;\n  hasSubscription = false;\n  interval: any|undefined;\n  file: File | undefined;\n  isNotExcel: boolean | undefined;\n  hasExcelFile: boolean | undefined;\n\n  constructor(private restService: RestService,private router: Router,private route: ActivatedRoute, private dataService: DataService) {\n    this.hasSubscription = true;\n  }\n\n  uploadFile(event: any):void {\n    this.isNotExcel = false;\n    if (event instanceof File && event.type =='application/vnd.ms-excel'){\n        this.file = event;\n    }else{\n      this.isNotExcel = true;\n    }\n  }\n\n  deleteAttachment():void {\n    this.file = undefined;\n  }\n  ngOnInit(): void {\n  }\n  import():void{\n    this.hasExcelFile = true;\n    this.isProcessing= true;\n    this.getCounterByPeriod();\n    this.restService.executeimport(this.file).pipe(\n      filter(()=>this.file!=null)\n    ).subscribe(\n      (res: any)=>{\n        this.isSucceed = res.status;\n        this.messageResult = res.message;\n        clearInterval(this.interval);\n        this.isProcessing= false;\n      },\n      error => {\n        this.isProcessing= false;\n        clearInterval(this.interval);\n        this.dataService.openSnackBar(\"impossible d'importer le fichier excel\",\"error\");\n      }\n    )\n  }\n\n  getCounterByPeriod():void {\n    this.interval = setInterval(()=>this.getCounter(),10);\n  }\n\n  getCounter():void{\n    this.restService.getImportedLineCount().pipe(\n      takeWhile(()=>this.hasSubscription && this.isProcessing)\n    ).subscribe(\n      res=>{\n        if (res){\n          if (res.count){\n            this.linesImported = res.count;\n          }\n          if (res.message){\n            this.importedTitle = res.message;\n          }\n        }\n      },\n      (error)=>{\n        clearInterval(this.interval);\n      }\n    )\n  }\n\n  return():void{\n    this.router.navigate([''], { relativeTo: this.route }).then();\n  }\n\n\n  ngOnDestroy():void {\n    this.hasSubscription = false;\n\n  }\n}\n","<mat-card class=\"import-card\">\n  <div class=\"card-header\">\n    <div class=\"center\">\n      <div class=\"card-title\"><h1>Import Excel</h1></div>\n    </div>\n  </div>\n    <mat-card-content>\n      <div class=\"content\">\n        <div *ngIf=\"!hasExcelFile\">\n          <div class=\"uploadfilecontainer\" (click)=\"fileInput.click()\" appDragDrop (files)=\"uploadFile($event)\">\n            <input hidden type=\"file\" #fileInput (change)=\"uploadFile($event)\">\n          </div>\n          <div *ngIf=\"isNotExcel\" class=\"center\"><span class=\"fail\">Fichier excel au format XLS (.xls) requis</span></div>\n          <div *ngIf=\"file\" class=\"files-list\">\n            <p> {{ file.name }} </p>\n            <button mat-icon-button class=\"delete-file\" (click)=\"deleteAttachment()\">\n              <mat-icon>delete</mat-icon>\n            </button>\n          </div>\n        </div>\n        <div class=\"counters-container\">\n          <div *ngIf=\"linesImported>0\" class=\"film-list\">\n            <div class=\"imported-title\">&nbsp;&nbsp;{{importedTitle}}</div>\n          </div>\n          <div *ngIf=\"isProcessing || isSucceed\">\n            <span class=\"line-label\">Nombre de lignes importées : </span><span class=\"imported-number\">{{linesImported}}</span>\n          </div>\n        </div>\n        <div class=\"result-container\">\n          <span [className]=\"isSucceed ? 'success' : 'fail'\">{{messageResult}}</span>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <div class=\"buttons center\">\n        <button mat-raised-button color=\"link\" (click)=\"return()\">Retour</button>\n        <button mat-raised-button color=\"primary\" *ngIf=\"!messageResult && file\" (click)=\"import()\" [disabled]=\"!file\" class=\"import-button\">Importer</button>\n      </div>\n    </mat-card-actions>\n</mat-card>\n","import {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {Component, ElementRef, Input, OnInit, Output, ViewChild, EventEmitter, OnDestroy} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {Observable} from 'rxjs';\nimport {map, startWith, takeWhile} from 'rxjs/operators';\nimport {DataService} from \"../../services/data.service\";\n\n/**\n * @title Chips Autocomplete\n */\n@Component({\n  selector: 'chip-form-component',\n  templateUrl: 'chipform.component.html',\n  styleUrls: ['chipform.component.css'],\n})\nexport class ChipformComponent implements OnInit, OnDestroy{\n  @Input() title: string | undefined;\n  @Input() placeholder: string | undefined;\n  @Input() listOfElements: any[];\n  @Input() elements: string[] = [];\n  @Input() limitedChoice: boolean | undefined;\n  @Output() elementsEmitter = new EventEmitter<string[]>();\n  hasSubscription = false;\n  panelClass = \"panel-class\";\n  visible = true;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  elementCtrl = new FormControl();\n  filteredElements: Observable<string[]> | undefined;\n\n  @ViewChild('elementInput') elementInput: ElementRef<HTMLInputElement> | undefined;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete | undefined;\n\n  constructor(public dataService: DataService) {\n    this.listOfElements=[];\n    this.hasSubscription = true;\n  }\n\n  ngOnInit():void {\n    this.filteredElements = this.elementCtrl.valueChanges.pipe(\n      startWith(null),\n      takeWhile(()=>this.hasSubscription),\n      map((element: string | null) => element ? this._filter(element) : this.listOfElements.slice()));\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    let value = event.value;\n    // Add our element\n    if ((value || '').trim()) {\n      if (this.limitedChoice){\n        if (this.dataService.isPaysExists(value.trim().toUpperCase())){\n          this.elements.push(value.trim().toUpperCase());\n          // emit after add\n          this.elementsEmitter.emit(this.elements);\n        }\n      }else{\n          this.elements.push(value.trim());\n          // emit after add\n          this.elementsEmitter.emit(this.elements);\n      }\n    }\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n    this.elementCtrl.setValue(null);\n  }\n\n  remove(element: string): void {\n    const index = this.elements.indexOf(element);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      // emit after remove\n      this.elementsEmitter.emit(this.elements);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    let value = event.option.viewValue;\n    const valueArray = event.option.viewValue.split(' ');\n    if (valueArray.length>1){\n      value = valueArray[0];\n    }\n    this.elements.push(value);\n    // @ts-ignore\n    this.elementInput.nativeElement.value = '';\n    this.elementCtrl.setValue(null);\n  }\n\n  drop(event: CdkDragDrop<string[]>):void {\n    moveItemInArray(this.elements, event.previousIndex, event.currentIndex);\n    // emit after drop\n    this.elementsEmitter.emit(this.elements);\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    if (this.limitedChoice){\n      const searchByLabel = this.dataService.findLabelsContaining(filterValue)\n      const searchByCode = this.listOfElements.filter(element => element.toLowerCase().indexOf(filterValue) === 0);\n      const wholeSearch =  [...searchByLabel, ...searchByCode];\n      const set = new Set(wholeSearch);\n      return Array.from(set);\n    }else{\n      return this.listOfElements.filter(element => element.toLowerCase().includes(filterValue));\n    }\n  }\n  ngOnDestroy():void {\n    this.hasSubscription=false;\n  }\n}\n","<div>\n\n</div>\n<mat-form-field class=\"example-chip-list\">\n  <mat-label>{{title}}</mat-label>\n  <mat-chip-list #chipList\n                 class=\"example-chip\"\n                 cdkDropList\n                 cdkDropListOrientation=\"horizontal\"\n                 (cdkDropListDropped)=\"drop($event)\"\n                 attr.aria-label=\"{{title +' selection'}}\">\n    <mat-chip\n      *ngFor=\"let element of elements\"\n      cdkDrag\n      [selectable]=\"selectable\"\n      [removable]=\"removable\"\n      (removed)=\"remove(element)\"\n      class=\"example-box\">\n      {{element}}\n      <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n    </mat-chip>\n    <input\n      placeholder=\"{{placeholder}}\"\n      #elementInput\n      [formControl]=\"elementCtrl\"\n      [matAutocomplete]=\"auto\"\n      [matChipInputFor]=\"chipList\"\n      [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n      (matChipInputTokenEnd)=\"add($event)\">\n  </mat-chip-list>\n  <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\" [panelWidth]=\"250\">\n    <ng-container *ngIf=\"limitedChoice; else directorOptions\">\n      <mat-option *ngFor=\"let element of filteredElements | async\" [value]=\"element\">\n        <span class=\"code-pays-option\">{{element}}</span><span class=\"label-pays-option\">&nbsp;&nbsp;{{dataService.findLabelByCodePays(element)}}</span>\n      </mat-option>\n    </ng-container>\n    <ng-template #directorOptions>\n      <mat-option *ngFor=\"let element of filteredElements | async\" [value]=\"element\">\n        {{element}}\n      </mat-option>\n    </ng-template>\n\n  </mat-autocomplete>\n</mat-form-field>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {RestService} from \"../../services/rest.service\";\nimport {takeWhile} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-export',\n  templateUrl: './export.component.html',\n  styleUrls: ['./export.component.css']\n})\nexport class ExportComponent implements OnInit, OnDestroy {\n  hasSubscription: boolean;\n  fileUrl: any;\n  constructor(private sanitizer: DomSanitizer, private restService : RestService) {\n    this.hasSubscription = true;\n  }\n\n  ngOnInit(): void {\n    this.restService.downloadDb().pipe(\n      takeWhile(()=> this.hasSubscription)\n    ).subscribe(\n      res=>{\n        const blob = new Blob([res]);\n        this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(window.URL.createObjectURL(blob))\n      }\n    )\n  }\n\n  ngOnDestroy():void {\n    this.hasSubscription = false;\n  }\n\n}\n","<mat-card class=\"export-card\">\n  <div class=\"card-header\">\n    <div class=\"center\">\n      <div class=\"card-title\"><h1>Export Excel</h1></div>\n    </div>\n  </div>\n  <mat-card-content>\n    <div class=\"content\">\n     <span>Télécharger le fichier excel (XLS)</span>\n    </div>\n  </mat-card-content>\n  <mat-card-actions>\n    <div class=\"button-container center\">\n      <a [href]=\"fileUrl\" download=\"filmrunner.xls\">\n        <button mat-fab color=\"accent\" aria-label=\"Example icon button with a bookmark icon\">\n          <mat-icon>cloud_download</mat-icon>\n        </button>\n      </a>\n    </div>\n  </mat-card-actions>\n</mat-card>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {TokenStorageService} from \"./services/token-storage.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthService} from \"./services/auth.service\";\nimport {filter, takeWhile} from \"rxjs/operators\";\nimport {DataService} from \"./services/data.service\";\nimport {RestService} from \"./services/rest.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {EditDirectorDialogComponent} from \"./film-list/edit-director-dialog/edit-director-dialog.component\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy{\n  isLoggedIn = false;\n  isDirectorList = false;\n  showAdminArea = false;\n  hasSubscription = false;\n  directorName: string |undefined;\n  username: string = \"\";\n  roles: string[] = [];\n  title = 'frontend';\n  constructor(\n    private tokenStorageService: TokenStorageService,\n    private dataService: DataService,\n    private restService: RestService,\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public dialog: MatDialog) {\n    this.hasSubscription = true;\n  }\n\n  ngOnInit():void{\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.roles = user.roles;\n      this.showAdminArea = this.roles.includes('ROLE_ADMIN');\n\n      this.username = user.username;\n    }\n    this.authService.loggedIn.pipe(\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      res=>{\n        this.isLoggedIn = res;\n      }\n    )\n    this.restService.getImageDirectory().pipe(\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      (res: any)=>{\n        this.dataService.imageDirectory = res.message;\n        console.log(\"répertoire des images : \" + this.dataService.imageDirectory);\n      }\n    )\n    this.dataService.directorSubject.pipe(\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      res=>{\n        this.isDirectorList = res;\n      }\n    )\n  }\n\n  home():void{\n    this.router.navigate([''], {relativeTo: this.route}).then(r =>\n      ()=>{\n        console.log(\"login\");\n      }) ;\n  }\n  admin():void{\n    this.router.navigate(['/admin'], {relativeTo: this.route}).then(r =>\n      ()=>{\n        console.log(\"import\");\n      }) ;\n  }\n  login():void{\n    this.router.navigate(['/login'], {relativeTo: this.route}).then(r =>\n      ()=>{\n      console.log(\"login\");\n      }) ;\n  }\n  logout():void {\n    this.tokenStorageService.signOut();\n    this.authService.loggedIn.next(false);\n    this.router.navigate([''], {relativeTo: this.route}).then(r =>\n      ()=>{\n        console.log(\"logout\");\n      }) ;\n  }\n  addFilm():void{\n    this.router.navigate(['/add'], {relativeTo: this.route}).then(r =>\n      ()=>{\n        console.log(\"ajout de film\");\n      }) ;\n  }\n  getDirectorNameOpenDialog():void {\n    const id = this.getId();\n    this.restService.getDirectorNamebyId(id).pipe(\n      takeWhile(() => this.hasSubscription)\n    ).subscribe(\n      (res:any) => {\n        this.directorName = res.message;\n        this.openDialog(id);\n      },\n      error => {\n        this.dataService.openSnackBar(\"impossible de récupérer le nom du réalisateur\", \"error\");\n      }\n    )\n  }\n\n  openDialog(id: number):void{\n    const dialogRef = this.dialog.open(EditDirectorDialogComponent, {\n      width: '800px',\n      data: {idFilm: id, name: this.directorName}\n    });\n    dialogRef.afterClosed().pipe(\n      filter(x=>x!==null && x!==undefined)\n    ).subscribe(result => {\n      console.log('The dialog was closed');\n      this.updateDirector(id,result)\n    });\n  }\n\n  updateDirector(id: number, name: string):void{\n    this.restService.updateDirector(id,name).pipe(\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      res=>{\n        if (res){\n          window.location.reload();\n        }\n      },\n      error => {\n        this.dataService.openSnackBar(\"impossible de modifier le nom du réalisateur\",\"error\");\n      }\n    )\n  }\n\n\n\n  getId(): number{\n    const url = window.location.href.split('/');\n    return parseInt(url[url.length-1]);\n  }\n\n  ngOnDestroy():void {\n    this.hasSubscription = false;\n  }\n}\n","<div id=\"app\">\n  <div class=\"nav-icon\">\n    <div class=\"home-icon\" (click)=\"home()\">\n      <mat-icon color=\"primary\">home</mat-icon>\n    </div>\n    <div class=\"logout-icon\" *ngIf=\"isLoggedIn\" (click)=\"logout()\">\n      <mat-icon color=\"primary\">exit_to_app</mat-icon>\n    </div>\n    <div class=\"import-icon\" *ngIf=\"isLoggedIn\" (click)=\"admin()\">\n      <mat-icon color=\"primary\"> import_export</mat-icon>\n    </div>\n    <div class=\"login-icon\" *ngIf=\"!isLoggedIn\" (click)=\"login()\">\n      <mat-icon color=\"primary\">supervisor_account</mat-icon>\n    </div>\n    <div class=\"add-icon\" *ngIf=\"isLoggedIn\" (click)=\"addFilm()\">\n      <mat-icon color=\"primary\">add</mat-icon>\n    </div>\n    <div class=\"director-icon\" *ngIf=\"isLoggedIn && isDirectorList\" (click)=\"getDirectorNameOpenDialog()\">\n      <mat-icon color=\"primary\">edit</mat-icon>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ChipformComponent } from './dvd-form/chip-form/chipform.component';\nimport {MaterialModule} from \"./material/material.module\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {FormsModule} from \"@angular/forms\";\nimport { DvdformComponent } from './dvd-form/dvdform.component';\nimport { NumericDirective } from './numeric.directive';\nimport { ThemeListComponent } from './theme-list/theme-list.component';\nimport { ThemeDialog } from './theme-list/theme-dialog/theme-dialog.component';\nimport {MAT_DIALOG_DEFAULT_OPTIONS} from \"@angular/material/dialog\";\nimport { FilmListComponent } from './film-list/film-list.component';\nimport { LoginComponent } from './auth/login-component/login-component.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport {authInterceptorProviders} from \"./helpers/auth.interceptor\";\nimport { DeleteFilmDialogComponent } from './film-list/delete-film-dialog/delete-film-dialog.component';\nimport { DisplayFilmDialogComponent } from './film-list/display-film-dialog/display-film-dialog.component';\nimport { EditDirectorDialogComponent } from './film-list/edit-director-dialog/edit-director-dialog.component';\nimport { ImportComponent } from './admin/import/import.component';\nimport { DragDropDirective } from './directives/drag-drop.directive';\nimport { ResetComponent } from './admin/reset/reset.component';\nimport { ExportComponent } from './admin/export/export.component';\nimport { AdminComponent } from './admin/admin/admin.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    FormsModule\n\n  ],\n  declarations: [\n    AppComponent,\n    ChipformComponent,\n    DvdformComponent,\n    NumericDirective,\n    ThemeListComponent,\n    ThemeDialog,\n    FilmListComponent,\n    LoginComponent,\n    RegisterComponent,\n    DeleteFilmDialogComponent,\n    DisplayFilmDialogComponent,\n    EditDirectorDialogComponent,\n    ImportComponent,\n    DragDropDirective,\n    ResetComponent,\n    ExportComponent,\n    AdminComponent\n  ],\n  providers: [\n    {provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: false}},\n    authInterceptorProviders,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {takeWhile} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  form: any = {};\n  hasSubscription = false;\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService,private router: Router, private route: ActivatedRoute) {\n    this.hasSubscription = true;\n  }\n\n  ngOnInit():void {\n  }\n\n  onSubmit():void {\n    this.authService.register(this.form).pipe(\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      data => {\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n        this.router.navigate(['/login'], { relativeTo: this.route }).then();\n      },\n      err => {\n        this.errorMessage = err.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n  ngOnDestroy():void {\n    this.hasSubscription = false;\n  }\n}\n","<mat-card class=\"register-card\">\n  <div class=\"card-header\">\n    <div class=\"center\">\n      <div class=\"card-title\"><h1>Nouvel utilisateur</h1></div>\n    </div>\n  </div>\n  <form\n    *ngIf=\"!isSuccessful\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && onSubmit()\"\n    #f=\"ngForm\"\n    novalidate\n  >\n    <mat-card-content>\n      <img\n        id=\"profile-img\"\n        src=\"assets/img/avatar.png\"\n      />\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Utilisateur</mat-label>\n        <input matInput\n               type=\"text\"\n               class=\"form-control\"\n               name=\"username\"\n               #username=\"ngModel\"\n               id=\"username\"\n               [(ngModel)]=\"form.username\"\n               required\n               minlength=\"3\"\n               maxlength=\"20\"\n               #username=\"ngModel\"\n        >\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && username.invalid\">\n          <div *ngIf=\"username.errors && (username.dirty || username.touched)\">\n            <div *ngIf=\"username.errors.required\">Un nom d'utilisateur est requis</div>\n            <div *ngIf=\"username.errors.minlength\">\n              Le nom d'utilisateur doit avoir 3 caractères au minimum\n            </div>\n          </div>\n          <div *ngIf=\"username.errors && (username.dirty || username.touched)\">\n            <div *ngIf=\"username.errors.maxlength\">\n              Le nom d'utilisateur doit avoir au maximum 20 caractères\n            </div>\n          </div>\n        </div>\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input matInput\n               type=\"email\"\n               class=\"form-control\"\n               name=\"email\"\n               id=\"email\"\n               [(ngModel)]=\"form.email\"\n               required\n               email\n               #email=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\n          <div *ngIf=\"email.errors && (email.dirty || email.touched)\">\n            <div *ngIf=\"email.errors.required\">Email est requis</div>\n            <div *ngIf=\"email.errors.email\">\n              L'email doit être valide\n            </div>\n          </div>\n        </div>\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Mot de passe</mat-label>\n        <input matInput\n               type=\"password\"\n               class=\"form-control\"\n               name=\"password\"\n               id=\"password\"\n               [(ngModel)]=\"form.password\"\n               required\n               minlength=\"6\"\n               #password=\"ngModel\">\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\n          <div *ngIf=\"password.errors && (password.dirty || password.touched)\">\n            <div *ngIf=\"password.errors.required\">Un mot de passe est requis</div>\n            <div *ngIf=\"password.errors.minlength\">\n              Le mot de passe doit avoir au moins 6 caractères\n            </div>\n          </div>\n        </div>\n      </mat-form-field>\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n        Signup failed!<br />{{ errorMessage }}\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <div class=\"form-group center\">\n        <button mat-raised-button color=\"primary\">Enregistrer</button>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n          Enregistrement avec succès!\n        </div>\n      </div>\n    </mat-card-actions>\n  </form>\n</mat-card>\n\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() { }\n\n  signOut() {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return <string>sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user: any) {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser() {\n    return JSON.parse(<string>sessionStorage.getItem(USER_KEY));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {TokenStorageService} from \"../services/token-storage.service\";\n\nconst TOKEN_HEADER_KEY = 'Authorization';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private token: TokenStorageService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\n    }\n    return next.handle(authReq);\n  }\n}\n\nexport const authInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];\n","import {Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {DataService} from \"../../services/data.service\";\nimport {RestService} from \"../../services/rest.service\";\nimport {MatChipInputEvent} from \"@angular/material/chips\";\nimport {FormControl} from \"@angular/forms\";\nimport {MatAutocompleteSelectedEvent,MatAutocomplete} from \"@angular/material/autocomplete\";\nimport {map, startWith, takeWhile} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {COMMA, ENTER} from \"@angular/cdk/keycodes\";\n\n@Component({\n  selector: 'app-theme-dialog',\n  templateUrl: './theme-dialog.component.html',\n  styleUrls: ['./theme-dialog.component.css']\n})\nexport class ThemeDialog implements OnInit, OnDestroy {\n  hasSubscription: boolean = false;\n  themes: string[] = [];\n  currentValue: string = '';\n  oldValue: string = '';\n  visible = true;\n  addOnBlur = true;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  filteredElements: Observable<string[]> | undefined;\n  inputPlaceholder: string|null = \"Nouveau thème...\"\n\n  @ViewChild('elementInput') elementInput: ElementRef<HTMLInputElement> | undefined;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete | undefined;\n\n  constructor(private dataService: DataService, private  restService: RestService) {\n    this.themes = this.dataService.getThemeList();\n    this.hasSubscription = true;\n  }\n  elementCtrl = new FormControl();\n\n  ngOnInit(): void {\n    this.filteredElements = this.elementCtrl.valueChanges.pipe(\n      takeWhile(()=>this.hasSubscription),\n      startWith(null),\n      map((element: string | null) => element ? this._filter(element) : this.themes.slice()));\n  }\n\n  selectedThemes: any[] = [];\n\n  isSelected(theme: any): boolean {\n    const index = this.selectedThemes.indexOf(theme);\n    return index >= 0;\n  }\n\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n    // Add our element\n    if ((value || '').trim()) {\n      this.restService.createTheme(value).pipe(\n        takeWhile(()=>this.hasSubscription)\n      ).subscribe(\n        ()=>{\n          this.themes.push(value.trim());\n          this.dataService.setThemeList(this.themes);\n          this.dataService.openSnackBar(\"thème créé\",\"success\");\n        },\n        ()=>{\n          this.dataService.openSnackBar(\"échec de la création du thème\",\"error\");\n        }\n      );\n    }\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n    this.elementCtrl.setValue(null);\n  }\n\n  update():void{\n    this.selectedThemes[0] = this.currentValue;\n    const oldValindex = this.dataService.themeList.indexOf(this.oldValue);\n    if (oldValindex>=0){\n      this.restService.updateTheme(this.oldValue,this.currentValue).pipe(\n        takeWhile(()=>this.hasSubscription)\n      ).subscribe(\n        ()=>{\n          this.themes = this.dataService.getThemeList();\n          const index = this.themes.indexOf(this.oldValue);\n          this.themes[index]=this.currentValue;\n          this.selectedThemes.splice(0, 1);\n          this.currentValue =\"\";\n          this.dataService.openSnackBar(\"thème mis à jour\",\"success\");\n        },\n        ()=>{\n          this.dataService.openSnackBar(\"échec de la mise à jour du thème\",\"error\");\n        }\n      )\n    }\n  }\n\n  remove(element: string): void {\n    const index = this.themes.indexOf(element);\n    if (index >= 0) {\n      this.restService.deleteTheme(element).pipe(\n        takeWhile(()=>this.hasSubscription)\n      ).subscribe(\n        ()=>{\n          this.themes.splice(index, 1);\n          this.dataService.setThemeList(this.themes);\n          this.dataService.openSnackBar(\"thème supprimé\",\"success\");\n        },\n        ()=>{\n          this.dataService.openSnackBar(\"échec de la suppression du thème\",\"error\");\n        }\n      );\n    }\n  }\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.themes.push(event.option.viewValue);\n    // @ts-ignore\n    this.elementInput.nativeElement.value = '';\n    this.elementCtrl.setValue(null);\n  }\n\n  toggleTheme(theme: any): void {\n    let index = this.selectedThemes.indexOf(theme);\n    if (index >= 0) {\n      this.removable = true;\n      this.selectedThemes.splice(index, 1);\n      this.currentValue =\"\";\n    } else {\n      this.removable = false;\n      this.oldValue = theme;\n      this.currentValue = theme;\n      if (this.selectedThemes.length==0){\n        this.selectedThemes.push(theme);\n      }else{\n        this.selectedThemes.splice(0, 1);\n        this.selectedThemes.push(theme);\n      }\n    }\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    // @ts-ignore\n    return this.themes.filter(element => element.toLowerCase().indexOf(filterValue) === 0);\n  }\n  checkPlaceHolder():void {\n    if (this.inputPlaceholder) {\n      this.inputPlaceholder = null\n      return;\n    } else {\n      this.inputPlaceholder = 'Nouveau thème...'\n      return\n    }\n  }\n  ngOnDestroy():void{\n    this.hasSubscription = false;\n  }\n}\n","<div class=\"dialog-container\">\n  <div>\n    <div class=\"title\">\n      <mat-label>Gestion des thèmes</mat-label>\n    </div>\n    <div class=\"theme-gen-container\">\n      <mat-form-field class=\"dialog-chip-field\">\n        <mat-chip-list #chipList [(ngModel)]=\"selectedThemes\" multiple>\n          <mat-chip\n            *ngFor=\"let theme of themes\"\n            [selectable]=\"selectable\"\n            [selected]=\"isSelected(theme)\"\n            (click)=\"toggleTheme(theme)\"\n            [removable]=\"removable\"\n            (removed)=\"remove(theme)\">\n            {{theme}}&nbsp;\n            <mat-icon matChipRemove>{{isSelected(theme) ? \"edit\" : \"cancel\"}}</mat-icon>\n          </mat-chip>\n          <input (focus)=\"checkPlaceHolder()\" (blur)=\"checkPlaceHolder()\" matInput placeholder=\" {{inputPlaceholder}} \"\n                 [matChipInputFor]=\"chipList\"\n                 [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                 (matChipInputTokenEnd)=\"add($event)\">\n        </mat-chip-list>\n      </mat-form-field>\n    </div>\n    <div *ngIf=\"selectedThemes.length>0\" class=\"dialog-edit-container\">\n      <mat-form-field class=\"dialog-edit-field\">\n        <mat-label>Nouveau nom du thème</mat-label>\n        <input matInput\n               [(ngModel)]=\"currentValue\"\n               (keydown.enter)=\"update()\"\n               class=\"dialog-edit-input\">\n      </mat-form-field>\n      <button\n        mat-icon-button\n        color=\"red\"\n        type=\"button\"\n        (click)=\"update()\"\n        aria-label=\"bouton de mise a jour du theme\">\n          <mat-icon>spellcheck</mat-icon>\n      </button>\n    </div>\n    <div class=\"dialog-button\">\n      <button\n        type=\"button\" mat-raised-button\n        mat-dialog-close\n        color=\"primary\">\n          Fermer\n      </button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {RestService} from \"../services/rest.service\";\nimport {DataService} from \"../services/data.service\";\nimport {FilmListItem} from \"../models/film-list-item\";\nimport {of as observableOf} from \"rxjs\";\nimport {catchError, filter, takeWhile} from \"rxjs/operators\";\nimport {MatSort, Sort} from \"@angular/material/sort\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {TokenStorageService} from \"../services/token-storage.service\";\nimport {AuthService} from \"../services/auth.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {DeleteFilmDialogComponent} from \"./delete-film-dialog/delete-film-dialog.component\";\nimport {DisplayFilmDialogComponent} from \"./display-film-dialog/display-film-dialog.component\";\n\n@Component({\n  selector: 'app-film-list',\n  templateUrl: './film-list.component.html',\n  styleUrls: ['./film-list.component.css']\n})\n\nexport class FilmListComponent implements OnInit, OnDestroy {\n  hasSubscription = false;\n  isLoadingResults = true;\n  isLaunching = false;\n  isLoggedIn = false;\n  realisateurId: number | undefined;\n  resultsLength: number | undefined;\n  themes: string[] |undefined;\n  themesSelected:string[] = [];\n  columnsToDisplay: string[] = ['titre', 'realisateurs', 'annee', 'pays'];\n  dataSource = new MatTableDataSource<FilmListItem>();\n  elements: FilmListItem[] = [];\n  @ViewChild(MatSort,{static:false})set content(sort: MatSort) {\n    this.dataSource.sort = sort;\n  }\n  encapsulation: ViewEncapsulation.None | undefined\n\n  constructor(\n    private restService: RestService,\n    private dataService: DataService,\n    private authService: AuthService,\n    private router: Router,\n    private tokenStorageService: TokenStorageService,\n    private route: ActivatedRoute,\n    public dialog: MatDialog) {\n\n    this.hasSubscription = true;\n\n    route.params.pipe(\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(val => {\n      if (val.id){\n        this.realisateurId = val.id;\n        this.initializeRealisateurs(val.id);\n      }else {\n        this.dataService.directorSubject.next(false);\n        this.isLoggedIn = !!this.tokenStorageService.getToken();\n        this.initializeFilms();\n      }\n    });\n  }\n\n  ngOnInit():void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    this.authService.loggedIn.pipe(\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      res=>{\n        this.isLoggedIn = res;\n        const actionIsPresent =this.columnsToDisplay.includes('actions');\n        if (!this.isLoggedIn && actionIsPresent){\n          this.columnsToDisplay.pop();\n        }\n      }\n    )\n    this.restService.getAllThemesName().pipe(\n      filter(()=>!this.dataService.hasThemeList()),\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      res=>{\n        const index = res.indexOf(\"\",0);\n        if (index>=0){\n          res.splice(index,1);\n        }\n        this.dataService.setThemeList(res);\n        this.themes = res;\n      }\n    )\n    this.themes = this.dataService.getThemeList();\n  }\n\n  initializeFilms():void{\n    if (this.isLaunching){\n      return;\n    }\n    this.isLoadingResults = true;\n    console.log(\"initialize lancé\");\n    this.restService.findAllDvd().pipe(\n      takeWhile(()=>this.hasSubscription),\n      catchError(() => {\n        this.isLoadingResults = false;\n        return observableOf([]);\n      })).subscribe(\n      (res: FilmListItem[])=>{\n        if (res){\n          if (res.length===0){\n            this.dataService.openSnackBar(\"aucun film\",\"info\");\n          }\n          this.transformPays(res);\n          this.elements = res;\n          this.dataSource = new MatTableDataSource(this.elements);\n          this.isLoadingResults = false;\n          this.resultsLength = res.length;\n          this.dataService.setFilmList(this.elements);\n          this.dataSource.sort = this.content || null;\n          const sortState: Sort = {active: 'name', direction: 'desc'};\n          if (this.content){\n            this.content.active = sortState.active;\n            this.content.direction = sortState.direction;\n            this.content.sortChange.emit(sortState);\n          }\n          this.toggleActionColumn();\n        }\n      }\n    )\n  }\n  initializeRealisateurs(id: number):void{\n    this.isLoadingResults = true;\n    this.restService.findDvdByDirectorId(id).pipe(\n      //filter(()=>!this.dataService.hasFilm()),\n      takeWhile(()=>this.hasSubscription),\n      catchError(() => {\n        this.isLoadingResults = false;\n        return observableOf([]);\n      })).subscribe(\n      (res: FilmListItem[])=>{\n        if (res){\n          if (res.length===0){\n            this.dataService.openSnackBar(\"aucun film\",\"info\");\n          }\n          this.transformPays(res);\n          this.elements = res;\n          this.dataSource = new MatTableDataSource(this.elements);\n          this.isLoadingResults = false;\n          this.resultsLength = res.length;\n          this.dataSource.sort = this.content || null;\n          const sortState: Sort = {active: 'name', direction: 'desc'};\n          if (this.content){\n            this.content.active = sortState.active;\n            this.content.direction = sortState.direction;\n            this.content.sortChange.emit(sortState);\n          }\n          // informe que l'on est sur une liste de films d'un réalisateur\n          this.dataService.directorSubject.next(true);\n        }\n      }\n    )\n  }\n\n  toggleActionColumn():void{\n    if (this.isLoggedIn){\n      this.columnsToDisplay.push('actions');\n    }else{\n      const index = this.columnsToDisplay.indexOf('actions',0);\n      if (index>=0){\n        this.columnsToDisplay.splice(index,1);\n      }\n    }\n  }\n  transformPays(res: FilmListItem[]):void{\n    for (const film of res){\n      if (film.pays && film.pays.split(';').length>0){\n        film.pays = this.dataService.transformCodesToPaysLabels(film.pays);\n      }\n    }\n  }\n\n  applyFilter(event: Event):void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    this.resultsLength = this.dataSource.filteredData.length ;\n  }\n\n  openFilmByRealisateur(realisateur: string):void{\n    this.restService.getDirectorIdByName(realisateur).pipe(\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      res =>{\n        this.realisateurId = parseInt(res);\n        this.router.navigate(['/director',parseInt(res)], { relativeTo: this.route }).then();\n      },\n      error => {\n        this.dataService.openSnackBar(\"impossible de lire les données du réalisateur\",\"error\");\n      }\n    )\n  }\n\n  filterByTheme(event: any, theme: string):void{\n    if (this.themesSelected.includes(theme)){\n      const index = this.themesSelected.indexOf(theme,0);\n      this.themesSelected.splice(index,1);\n      if (this.themesSelected.length==0){\n        this.dataSource.filter = '';\n        this.dataSource.data = this.elements;\n        this.resultsLength = this.dataSource.data.length;\n        return;\n      }\n    }else{\n      this.themesSelected.push(theme);\n    }\n    let setFilms = new Set<FilmListItem>();\n    for (const theme of this.themesSelected){\n      const films: FilmListItem[] = this.dataService.getFilmList().filter(x=>x.themes?.includes(theme));\n      for (const film of films){\n        setFilms.add(film);\n      }\n    }\n    this.dataSource.data = Array.from(setFilms);\n    this.resultsLength = this.dataSource.data.length;\n  }\n\n  openDisplayFilmDialog(id: number): void {\n    const dialogRef = this.dialog.open(DisplayFilmDialogComponent, {\n      width: '600px',\n      data: {idFilm: id,\n        name: null}\n    });\n  }\n\n  openDeleteConfirmDialog(element: FilmListItem): void {\n    const dialogRef = this.dialog.open(DeleteFilmDialogComponent, {\n      width: '600px',\n      data: {idFilm: element.id,\n        name: element.titre}\n    });\n  }\n\n\n  editRealisateur(id: number):void{\n    this.router.navigate(['/director/edit/',id], { relativeTo: this.route }).then();\n  }\n  editFilm(id: number):void{\n    this.router.navigate(['/edit/',id], { relativeTo: this.route }).then();\n  }\n\n  logout():void {\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  }\n  ngOnDestroy():void {\n    this.hasSubscription = false;\n  }\n}\n","<div class=\"list-header\">\n  <div class=\"center\">\n    <mat-button-toggle-group #group=\"matButtonToggleGroup\" appearance=\"legacy\" multiple=true class=\"detail-group\">\n      <mat-button-toggle *ngFor=\"let item of themes;\" (change)=\"filterByTheme($event,item)\">{{item}}</mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n  <div class=\"result-number\">{{resultsLength ? resultsLength<=1? resultsLength+\" film\": resultsLength+\" films\": ''}}</div>\n  <div class=\"list-filter\">\n    <mat-form-field appearance=\"outline\">\n      <input matInput (keyup)=\"applyFilter($event)\" #input>\n    </mat-form-field>\n    <div class=\"theme-manager\">\n      <app-theme-list></app-theme-list>\n    </div>\n  </div>\n</div>\n<div class=\"table-container\">\n\n  <table mat-table *ngIf=\"!isLoadingResults;else loading\" [dataSource]=\"dataSource\" matSort matSortStart=\"asc\">\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"titre\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header [class.noborder]=\"!elements || elements.length==0\"><span class=\"list-cell-header\">Titre</span></th>\n      <td mat-cell *matCellDef=\"let element\" class=\"list-table-cell\"><span (click)=\"openDisplayFilmDialog(element.id)\" class=\"list-title\">{{element.titre}}</span></td>\n    </ng-container>\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"realisateurs\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header [class.noborder]=\"!elements || elements.length==0\"><span class=\"list-cell-header\">Réalisateurs</span></th>\n      <td mat-cell *matCellDef=\"let element\" class=\"list-director-name list-table-cell\">\n        <ng-container *ngIf=\"element.realisateurs && element.realisateurs.length\">\n          <span *ngFor=\"let rea of element.realisateurs; let i=index; let isLast=last;\" (click)=\"openFilmByRealisateur(rea)\">\n            {{rea}}{{isLast ? '' : ', '}}\n          </span>\n        </ng-container>\n      </td>\n    </ng-container>\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"annee\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header [class.noborder]=\"!elements || elements.length==0\"><span class=\"list-cell-header\">Année</span></th>\n      <td mat-cell *matCellDef=\"let element\" class=\"list-table-cell annee\"> {{element.annee}} </td>\n    </ng-container>\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"pays\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header [class.noborder]=\"!elements || elements.length==0\"><span class=\"list-cell-header\">Pays</span></th>\n      <td mat-cell *matCellDef=\"let element\" class=\"list-table-cell\"> {{element.pays}} </td>\n    </ng-container>\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"actions\" *ngIf=\"isLoggedIn\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header [class.noborder]=\"!elements || elements.length==0\" style=\"width: 5%\"><span class=\"list-cell-header\">Actions</span></th>\n      <td mat-cell *matCellDef=\"let element\" class=\"list-table-cell\" style=\"text-align: right\">\n        <span><button mat-button class=\"action-button\" color=\"primary\" (click)=\"editFilm(element.id)\"><mat-icon class=\"action-icon\">edit</mat-icon></button></span>\n        <span><button mat-button class=\"action-button\" color=\"primary\" (click)=\"openDeleteConfirmDialog(element)\"><mat-icon class=\"action-icon\">delete</mat-icon></button></span>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row noborder\" *matNoDataRow>\n      <td class=\"mat-cell noborder\" colspan=\"4\">{{elements && elements.length>0 ? 'Aucun film ne correspond au filtre \"'+input.value+'\"' : 'Aucun film'}}</td>\n    </tr>\n  </table>\n  <ng-template #loading>\n    <div class=\"spinner-container\">\n      <mat-spinner [diameter]=\"200\"></mat-spinner>\n    </div>\n  </ng-template>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <app-import class=\"item\"></app-import>\n  <app-export class=\"item\"></app-export>\n  <app-reset class=\"item\"></app-reset>\n</div>\n\n\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n@NgModule({\n  imports:[\n    MatSortModule\n  ],\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule {}\n\n\n/**  Copyright 2020 Google LLC. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, Subject} from 'rxjs';\nimport {environment} from '../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  AUTH_API = environment.baseUrl+'auth/';\n  loggedIn: Subject<boolean> = new Subject<boolean>();\n  constructor(private http: HttpClient) { }\n\n  login(credentials:any): Observable<any> {\n    return this.http.post(this.AUTH_API + 'signin', {\n      username: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n\n  register(user:any): Observable<any> {\n    return this.http.post(this.AUTH_API + 'signup', {\n      username: user.username,\n      email: user.email,\n      password: user.password\n    }, httpOptions);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input\n} from \"@angular/core\";\n\n@Directive({\n  selector: \"[numeric]\"\n})\nexport class NumericDirective {\n  @Input(\"decimals\") decimals: number = 0;\n\n  private check(value: string) {\n    if (this.decimals <= 0) {\n      return String(value).match(new RegExp(/^\\d+$/));\n    } else {\n      var regExpString =\n        \"^\\\\s*((\\\\d+(\\\\.\\\\d{0,\" +\n        this.decimals +\n        \"})?)|((\\\\d*(\\\\.\\\\d{1,\" +\n        this.decimals +\n        \"}))))\\\\s*$\";\n      return String(value).match(new RegExp(regExpString));\n    }\n  }\n\n  private run(oldValue: any) {\n    setTimeout(() => {\n      let currentValue: string = this.el.nativeElement.value;\n      if (currentValue !== '' && !this.check(currentValue)) {\n        this.el.nativeElement.value = oldValue;\n      }\n    });\n  }\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"keydown\", [\"$event\"])\n  onKeyDown(event: KeyboardEvent) {\n    this.run(this.el.nativeElement.value);\n  }\n\n  @HostListener(\"paste\", [\"$event\"])\n  onPaste(event: ClipboardEvent) {\n    this.run(this.el.nativeElement.value);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {DvdForm} from '../models/dvd-form';\nimport {FilmListItem} from '../models/film-list-item';\nimport {environment} from '../../environments/environment';\nimport  *  as  enums  from  '../models/enums.json';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RestService {\n  listes = enums as any\n  httpHeader = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n  httpHeaderXls = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n\n  baseUrl = environment.baseUrl;\n\n  constructor(private  http: HttpClient) {\n    console.log(this.baseUrl);\n  }\n\n  // LOGIN\n  login(username: string, password: string): Observable<boolean>{\n    return this.http.post<boolean>(this.baseUrl+'auth/login', {\n      username: username,\n      password: password\n    });\n  }\n\n  // DVD MANAGEMENT\n  findDvdById(id: number): Observable<DvdForm>{\n    return this.http.get<DvdForm>(this.baseUrl+'dvd/'+id);\n  }\n  findAllDvd(): Observable<FilmListItem[]>{\n    return this.http.get<FilmListItem[]>(this.baseUrl+'dvd');\n  }\n  createDvd(dvdForm: DvdForm): Observable<FilmListItem>{\n    return this.http.put<FilmListItem>(this.baseUrl+'dvd', dvdForm );\n  }\n  updateDvd(dvdForm: DvdForm): Observable<FilmListItem>{\n    return this.http.put<FilmListItem>(this.baseUrl+'dvd/'+dvdForm.id, dvdForm );\n  }\n  deleteDvd(dvdId: number): Observable<boolean>{\n    return this.http.delete<boolean>(this.baseUrl+'dvd/'+dvdId);\n  }\n\n\n  // DIRECTORS MANAGEMENT\n  getAllDirectorsName(): Observable<string[]>{\n    return this.http.get<string[]>(this.baseUrl+'director');\n  }\n  findDvdByDirectorId(directorId: number):Observable<FilmListItem[]>{\n    return this.http.get<FilmListItem[]>(this.baseUrl+'director/'+directorId);\n  }\n  getDirectorIdByName(name: string): Observable<string>{\n    const params = new HttpParams().set('name',name);\n    return this.http.get<string>(this.baseUrl+'director/',{params: params});\n  }\n  getDirectorNamebyId(id: number): Observable<string>{\n    return this.http.get<string>(this.baseUrl+'director/id/'+id);\n  }\n  updateDirector(id: number, name: string): Observable<boolean>{\n    return this.http.patch<boolean>(this.baseUrl+'director/'+id,name);\n  }\n\n\n  // THEME MANAGEMENT\n  getAllThemesName(): Observable<string[]>{\n    return this.http.get<string[]>(this.baseUrl+'theme');\n  }\n  createTheme(name: string):Observable<string>{\n    return this.http.put<string>(this.baseUrl+'theme', name)\n  }\n  updateTheme(oldValue: string, newValue: string):Observable<string>{\n    return this.http.put<string>(this.baseUrl+'theme/'+oldValue,newValue);\n  }\n  deleteTheme(name: string):Observable<boolean>{\n    return this.http.delete<boolean>(this.baseUrl+'theme/'+name);\n  }\n\n\n  // IMAGE MANAGEMENT\n  upload(file: File): Promise<any> {\n    const formData: FormData = new FormData();\n    formData.append('file', JSON.stringify(file));\n    return this.http.post(this.baseUrl+'uploadFile',formData).toPromise();\n  }\n  getFiles(): Observable<any> {\n    return this.http.get(this.baseUrl+'files');\n  }\n  deleteImage(dvdId: number):Observable<boolean>{\n    return this.http.get<boolean>(this.baseUrl+'image/'+dvdId);\n  }\n\n  // IMPORT\n  getImportedLineCount(): Observable<any>{\n    return this.http.get<any>(this.baseUrl+'import/count')\n  }\n  executeimport(file: File | undefined): Observable<any>{\n    const formData: FormData = new FormData();\n    if (file){\n      formData.append('file', file);\n\n    }\n    return this.http.post<any>(this.baseUrl+\"import/execute\", formData);\n  }\n\n  // RESET\n  cleanDb():Observable<any>{\n    return this.http.get<any>(this.baseUrl+\"reset/cleandb\");\n  }\n\n  // DOWNLOAD DB\n  downloadDb():Observable<any>{\n      return this.http.post(this.baseUrl+\"db/download\",this.listes.default,{ responseType: 'blob' })\n  }\n\n  // CONTEXT\n  getImageDirectory(): Observable<any>{\n    return this.http.get<any>(this.baseUrl+'context');\n  }\n\n  private handleError = (error: HttpErrorResponse, method: string, object: any) => {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DvdformComponent} from \"./dvd-form/dvdform.component\";\nimport {FilmListComponent} from \"./film-list/film-list.component\";\nimport {LoginComponent} from \"./auth/login-component/login-component.component\";\nimport {RegisterComponent} from \"./auth/register/register.component\";\nimport {ImportComponent} from \"./admin/import/import.component\";\nimport {ResetComponent} from \"./admin/reset/reset.component\";\nimport {ExportComponent} from \"./admin/export/export.component\";\nimport {AdminComponent} from \"./admin/admin/admin.component\";\n\nconst routes: Routes = [\n  { path: '', component: FilmListComponent },\n  { path: 'add', component: DvdformComponent },\n  { path: 'edit/:id', component: DvdformComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'director/:id', component: FilmListComponent},\n  { path: 'register', component: RegisterComponent },\n  { path: 'import', component: ImportComponent },\n  { path: 'reset', component: ResetComponent },\n  { path: 'download', component: ExportComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: '', redirectTo: '', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {RestService} from \"../../services/rest.service\";\nimport {takeWhile} from \"rxjs/operators\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {DataService} from \"../../services/data.service\";\n\nexport interface DialogData {\n  idFilm: number;\n  name: string;\n}\n\n@Component({\n  selector: 'app-delete-film-dialog',\n  templateUrl: './delete-film-dialog.component.html',\n  styleUrls: ['./delete-film-dialog.component.css']\n})\nexport class DeleteFilmDialogComponent implements OnInit, OnDestroy {\nhasSubscription = false;\n  constructor(\n    public dialogRef: MatDialogRef<DeleteFilmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private restService: RestService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private dataService: DataService) {\n    this.hasSubscription = true;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n  }\n\n  confirmDeleteFilm():void{\n    this.restService.deleteDvd(this.data.idFilm).pipe(\n      takeWhile(()=>this.hasSubscription)\n    ).subscribe(\n      res=>{\n        this.dialogRef.close();\n        this.router.navigate([''], { relativeTo: this.route }).then();\n        if (res){\n          this.dataService.openSnackBar(\"film \\\"\" + this.data.name + \"\\\" supprimé!\",\"success\");\n        }\n      },\n      error => {\n        console.log(\"impossible de supprimer le film : \"+error);\n      }\n    )\n  }\n\n  ngOnDestroy():void {\n    this.hasSubscription = false;\n  }\n\n}\n","<h1 mat-dialog-title>Confimation de la suppression du film {{data.name}}</h1>\n<div mat-dialog-content>\n  <p>Etes-vous sûr de vouloir supprimer le film {{data.name}}</p>\n</div>\n<div mat-dialog-actions class=\"center\">\n  <button mat-raised-button (click)=\"onNoClick()\">Non</button>\n  <button mat-raised-button [mat-dialog-close]=\"data.idFilm\" color=\"accent\" (click)=\"confirmDeleteFilm()\" cdkFocusInitial>Oui</button>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}